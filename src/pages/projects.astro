---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <h1>Projects</h1>
      <ol>
        <li>
          <strong>An LLM Built From Scratch: </strong> I wanted to understand language
          models not just as a consumer or student, but from the inside. So I built
          a GPT-2–like model from scratch — everything from tokenization to training
          loops. Just raw PyTorch and text files. That’s when I truly appreciated
          what goes into making language models tick. <a
            href="https://github.com/hanani8/Splitter"
            target="_blank"
            rel="noopener noreferrer"><em>GitHub</em></a
          >
        </li>
        <li>
          <strong>Mathematical Ability</strong>: I spent a whole semester
          deep-diving into a highly mathematical and notation-heavy paper on
          Strong Rank-Revealing QR Decompositions. I wrote code in Fortran
          (thanks to autoregression, picking up new stuff is much easier now),
          managed my team, parsed dense academic papers, and even explored
          LAPACK’s source code. It was painful, dense, and one of the most
          satisfying technical journeys I’ve taken — it made me fall even deeper
          in love with numerical linear algebra and low-level programming. <a
            href="/SRRQR-Slides/index.html"><em>See it for yourself</em></a
          >
        </li>
        <li>
          <strong>Data Visualization and Story-Telling</strong>: Data’s only
          useful if it moves people. Over time, I’ve built a knack for taking
          messy, dense datasets and telling stories with them — stories that are
          clear, sharp, and sometimes even fun. It’s not just about charts, it’s
          about narrative flow. See it for yourself:
          <ul>
            <li>
              My Quintessential Work on Data Viz:
              <a
                href="https://slides.com/hananibathina/deck/fullscreen"
                target="_blank"
                rel="noopener noreferrer"><em>Here</em></a
              >, <a
                href="https://github.com/hanani8/team_ghee"
                target="_blank"
                rel="noopener noreferrer"><em>Code</em></a
              >
            </li>
            <li>
              My Take on Famous Burtin's Antibiotics (I removed the labels. Tell
              me if you could decipher): <a href="/Burtin-Antibiotic/index.html"
                >Here</a
              >, <a
                href="https://github.com/hanani8/Burtin-Anitibiotic-Data-Viz"
                target="_blank"
                rel="noopener noreferrer"><em>Code</em></a
              >
            </li>
          </ul>
          <!-- <li>
          <strong>Computer Vision & Cricket</strong>: Tried to apply my
          understanding of computer vision to my own cricket batting. Using
          everything from template matching to CNNs on Mel spectrograms (and a
          few things in between), I took a 30-minute batting session and
          condensed it into a 30-second highlight reel. Part engineering, part
          cricket, and all fun. I’m pretty sure my Instagram followers enjoyed
          that barrage of sweet, sweet bat-meets-ball sounds.
        </li> -->
          <li>
            <strong>Tools for Research in Vision-Language Models</strong>: I
            built a full suite of tools to manage and support ~50 annotators
            working on creating a benchmark dataset for VLMs, and to run model
            inference for evaluation on that dataset. It was mission-critical —
            with little room for failure, since both annotation and inference
            are expensive — and focused on streamlining the entire pipeline,
            from dataset creation to evaluation. A small but meaningful step
            toward the larger vision: a Ten-Trillion-Token corpus for Indic
            languages.
            <a
              href="https://github.com/hanani8/hmer-eval"
              target="_blank"
              rel="noopener noreferrer">Github</a
            >
          </li>
          <li>
            <strong>Graphs Visualizer for Adjacency Matrices</strong>: I wanted
            students of Graph Algorithms (like myself at the time) to see and
            feel graphs, not just trace through lists and arrays. Figured out
            SVG through pure documentation-diving — It was pre-GPT era — and
            built something that made graphs a easy to work with. Looking back,
            it was my first brush with building educational tools that felt
            useful. <a href="/html/visualize_graphs.html">Use it here!</a>
            <li>
              <strong>Not Just Code: Leading, Building, Shipping</strong>: This
              was where theory met application. I led a team to develop and
              deploy a simple app based on the Nearest-Neighbor algorithm. The
              application itself wasn’t complicated, but the approach is what
              stands out. I learned to juggle code, bugs, timelines, and people
              — and somewhere in there, how to ship end-to-end products that not
              only work, but are beautiful too. <a
                href="https://hanani8.github.io/rtm/#/"
                target="_blank"
                rel="noopener noreferrer">See Here (Static-Build)</a
              >, <a
                href="https://github.com/hanani8/vidhi"
                target="_blank"
                rel="noopener noreferrer">Frontend (Vidhi)</a
              >, <a
                href="https://github.com/hanani8/merupa"
                target="_blank"
                rel="noopener noreferrer">Backend (Merupa)</a
              >
            </li>
            <li>
              <strong>Stadiometer</strong>: Built a functional stadiometer from
              scratch — the kind that measures your height. This wasn’t just
              code: it involved PCB design, CAD, laser cutting, wood milling,
              embedded programming, and a whole lot of debugging. It taught me
              the joy of building things that live outside the screen. Atoms,
              not bits. <a
                href="https://fabacademy.org/2021/labs/kochi/students/hanani-b/project.html"
                target="_blank"
                rel="noopener noreferrer">Documentation</a
              >
            </li>
            <li>
              <strong>Flagstaff</strong>: We’ve all grown up watching Americans
              fly their flags in the most aesthetic way possible (think Wall
              Street). In India, I saw a very different story — cheap fabric,
              awkward poles. So I built an Indian flagstaff — minimalist,
              elegant, and fully compliant with the Indian Flag Code. More
              importantly, I sold them too (4 units at ₹1500 each). It’s my
              little tribute to doing things with grace and intention. <a
                href="/html/flag.html">Blog</a
              >
            </li>
          </li>
        </li>
      </ol>
    </main>
  </body>
</html>
